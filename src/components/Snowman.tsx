/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

// @ts-ignore
import uri from "../assets/models/snowman.glb";

type GLTFResult = GLTF & {
  nodes: {
    Sphere001: THREE.Mesh;
    Torus001: THREE.Mesh;
    Sphere003: THREE.Mesh;
    Cylinder006: THREE.Mesh;
    Cylinder005: THREE.Mesh;
    Sphere002: THREE.Mesh;
    // Surface: THREE.Mesh;
    Torus002: THREE.Mesh;
    Torus: THREE.Mesh;
    Cylinder001: THREE.Mesh;
    Cylinder004: THREE.Mesh;
    Cone: THREE.Mesh;
    // SurfPatch: THREE.Mesh;
    Cylinder: THREE.Mesh;
    Torus003: THREE.Mesh;
    Cylinder003: THREE.Mesh;
    Cylinder007: THREE.Mesh;
    Cylinder002: THREE.Mesh;
    Sphere004: THREE.Mesh;
    Sphere: THREE.Mesh;
  };
  materials: {
    nieve: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    carbon: THREE.MeshStandardMaterial;
    ["madera buena"]: THREE.MeshStandardMaterial;
    ["Material.008"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["tela gris"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(uri) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null} scale={[0.1, 0.1, 0.1]}>
      <mesh
        geometry={nodes.Sphere001.geometry}
        material={nodes.Sphere001.material}
      />
      <mesh
        geometry={nodes.Torus001.geometry}
        material={materials["Material.004"]}
      />
      <mesh
        geometry={nodes.Sphere003.geometry}
        material={nodes.Sphere003.material}
      />
      <mesh
        geometry={nodes.Cylinder006.geometry}
        material={nodes.Cylinder006.material}
      />
      <mesh
        geometry={nodes.Cylinder005.geometry}
        material={nodes.Cylinder005.material}
      />
      <mesh
        geometry={nodes.Sphere002.geometry}
        material={nodes.Sphere002.material}
      />
      {/* <mesh
        geometry={nodes.Surface.geometry}
        material={materials["Material.008"]}
      /> */}
      <mesh
        geometry={nodes.Torus002.geometry}
        material={materials["Material.007"]}
      />
      <mesh
        geometry={nodes.Torus.geometry}
        material={materials["Material.003"]}
      />
      <mesh
        geometry={nodes.Cylinder001.geometry}
        material={nodes.Cylinder001.material}
      />
      <mesh
        geometry={nodes.Cylinder004.geometry}
        material={nodes.Cylinder004.material}
      />
      <mesh
        geometry={nodes.Cone.geometry}
        material={materials["Material.005"]}
      />
      {/* <mesh
        geometry={nodes.SurfPatch.geometry}
        material={materials["Material.001"]}
      /> */}
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={nodes.Cylinder.material}
      />
      <mesh
        geometry={nodes.Torus003.geometry}
        material={materials["Material.006"]}
      />
      <mesh
        geometry={nodes.Cylinder003.geometry}
        material={nodes.Cylinder003.material}
      />
      <mesh
        geometry={nodes.Cylinder007.geometry}
        material={nodes.Cylinder007.material}
      />
      <mesh
        geometry={nodes.Cylinder002.geometry}
        material={nodes.Cylinder002.material}
      />
      <mesh
        geometry={nodes.Sphere004.geometry}
        material={nodes.Sphere004.material}
      />
      <mesh geometry={nodes.Sphere.geometry} material={nodes.Sphere.material} />
    </group>
  );
}

useGLTF.preload(uri);
